services:

  # Database
  postgres:
    image: postgres:13
    container_name: hootsifer_db
    restart: always
    ports:
      - "9029:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - bridge
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Bot
  bot:
    build: bot
    container_name: hootsifer_bot
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - ./bot/config:/app/config:ro
      - ./bot/logs:/app/logs:rw
    ports:
      - "3589:3000"
    env_file:
      - ./bot/.env
    depends_on:
      - postgres
    networks:
      - bridge

  # Owlet
  owlet:
    build: owlet
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./owlet/logs:/app/logs:rw
    env_file:
      - ./owlet/.env
    depends_on:
      - bot
    networks:
      - bridge

  # Web
  web:
    build: web
    container_name: hootsifer_web
    restart: always
    ports:
      - "3588:3000"
    environment:
      - API_URL=http://hootsifer_bot:3000
    depends_on:
      - bot
    networks:
      - bridge
      - nginx

networks:
  bridge:
  nginx:
    external: true
    name: nginx
